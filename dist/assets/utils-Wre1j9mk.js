function m(t,e){let r;return(...n)=>{clearTimeout(r),r=setTimeout(()=>t(...n),e)}}function d(t,e){let r;return(...n)=>{r||(t(...n),r=!0,setTimeout(()=>r=!1,e))}}function p(t,e,r){const n=document.createElement(t);return e&&(n.className=e),r&&(n.textContent=r),n}function f(t,e){const r=document.createElement("style");e&&(r.id=e),r.textContent=t,document.head.appendChild(r)}function y(t){const e=document.getElementById(t);e&&e.remove()}function h(t,e=5e3){return new Promise((r,n)=>{const i=document.querySelector(t);if(i){r(i);return}const o=new MutationObserver(()=>{const s=document.querySelector(t);s&&(o.disconnect(),r(s))});o.observe(document.body,{childList:!0,subtree:!0}),setTimeout(()=>{o.disconnect(),n(new Error(`Element ${t} not found within ${e}ms`))},e)})}function w(t){const e=document.createElement("script");e.textContent=t,document.head.appendChild(e),e.remove()}function E(t){if(navigator.clipboard)return navigator.clipboard.writeText(t);{const e=document.createElement("textarea");return e.value=t,document.body.appendChild(e),e.select(),document.execCommand("copy"),document.body.removeChild(e),Promise.resolve()}}function g(t,e=2){if(t===0)return"0 Bytes";const r=1024,n=e<0?0:e,i=["Bytes","KB","MB","GB","TB","PB","EB","ZB","YB"],o=Math.floor(Math.log(t)/Math.log(r));return parseFloat((t/Math.pow(r,o)).toFixed(n))+" "+i[o]}function $(t="plugin"){return`${t}-${Date.now()}-${Math.random().toString(36).substr(2,9)}`}function v(t){try{return new URL(t),!0}catch{return!1}}function x(t){const e=document.createElement("div");return e.textContent=t,e.innerHTML}async function C(t,e){try{const{exec:r}=require("child_process"),{promisify:n}=require("util"),i=n(r),o=require("fs");o.existsSync(e)||o.mkdirSync(e,{recursive:!0});const s=process.platform;let c;if(s==="win32"){const a=t.replace(/\\/g,"\\\\"),l=e.replace(/\\/g,"\\\\");c=`powershell -Command "Expand-Archive -Path '${a}' -DestinationPath '${l}' -Force"`}else if(s==="darwin")c=`unzip -o "${t}" -d "${e}"`;else throw new Error(`Unsupported platform: ${s}`);return console.log(`Extracting zip: ${c}`),await i(c),!0}catch(r){return console.error("Zip extraction failed:",r),!1}}async function F(t){try{const{exec:e}=require("child_process"),{promisify:r}=require("util"),n=r(e),i=process.platform;let o;if(i==="win32")o=`powershell -Command "Add-Type -AssemblyName System.IO.Compression.FileSystem; [System.IO.Compression.ZipFile]::OpenRead('${t.replace(/\\/g,"\\\\")}').Entries | Select-Object -ExpandProperty FullName"`;else if(i==="darwin")o=`unzip -l "${t}" | grep -E '^[[:space:]]*[0-9]+' | awk '{print $NF}'`;else throw new Error(`Unsupported platform: ${i}`);const{stdout:s}=await n(o);return i==="win32"?s.trim().split(`
`).filter(c=>c.trim()):s.trim().split(`
`).filter(c=>c.trim())}catch(e){return console.error("Failed to list zip contents:",e),[]}}async function S(t,e,r=null,n={}){const i=require("fs"),o=require("path");var s=await eagle.os.tmpdir(),c=o.join(s,`${t}.${e}`),a=await eagle.folder.getSelected();if(a&&a.length>0){var l=a[0];n.folders=[l.id]}try{return await i.promises.writeFile(c,r||""),n.name=`${t}.${e}`,await eagle.item.addFromPath(c,n),!0}catch(u){return console.error("Failed to create file in Eagle:",u),!1}}export{f as addStylesheet,E as copyToClipboard,p as createElement,S as createFile,m as debounce,C as extractZip,g as formatBytes,$ as generateId,w as injectScript,v as isValidUrl,F as listZipContents,y as removeStylesheet,x as sanitizeHtml,d as throttle,h as waitForElement};
